{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "scaleUnit": {
            "type": "string",
            "metadata": {
                "description": "Describes the scale unit that is to be used to uniquely identify each resource"
            }
        },
        "botFpaConnectionCertName": {
            "type": "string"
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "TenantId"
            }
        },
        "cdnobjectId": {
            "type": "string",
            "metadata": {
                "description": "CDN objectId"
            }
        },
        "appserviceobjectId": {
            "type": "string",
            "metadata": {
                "description": "App service objectId"
            }
        },
        "vivaSalesSSLCertName": {
            "type": "string"
        },
        "vivaSalesLicensingCertName": {
            "type": "string"
        },
        "deploymentSpn": {
            "type": "string",
            "metadata": {
                "description": "The deployment SPN"
            }
        },
        "kVDefaultAction": {
            "type": "string"
        },
        "Ev2TemplateSAS": {
            "type": "securestring"
        },
        "Ev2ScriptUrl": {
            "type": "string"
        },
        "Cert_Config": {
            "type": "string",
            "metadata": {
                "description": "Which Cert configuration to use while using the Create Cert Script"
            }
        },
        "DeploymentScriptsCleanupPreference": {
            "type": "string",
            "defaultValue": "OnSuccess",
            "metadata": {
              "description": "Value when to delete the Deployment Scripts artifacts"
            }
          }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "publicipaddress": "NAT-IP-SPPublicIPAddress",
        "publicIPAddressName": "[concat(variables('publicipaddress'),parameters('scaleUnit'))]",
        "vaults_salesproductivity_name": "[concat('spkeyvault', parameters('scaleUnit'))]",
        "kvUrl": "[concat('https://', variables('vaults_salesproductivity_name'), '.vault.azure.net/')]",
        "owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "kvRbacAdminRoleID": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '00482a5a-887f-4fb3-b363-3b7fe8e74483')]",
        "kvRbacCryptoOfficerRoleID": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '14b46e9e-c2b7-41b4-b07b-48a6ebf60603')]",
        "kvRbacSecretsUserRoleID": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "kvDataProtectionEncryptionKeyName": "data-protection-key",
        "identityName": "[concat('depUserIdentity', parameters('scaleUnit'))]",
        "deploymentScriptsUpdateTag": "[guid(uniqueString('createAddCertificate', parameters('scaleUnit'), subscription().subscriptionId, '4'))]",
        "deploymentuserIdentityAssignmentId": "[guid(uniqueString(variables('identityName'),'owner' ,subscription().subscriptionId))]",
        "deploymentuserIdentityAssignmentId2": "[guid(uniqueString(variables('identityName'),'kvAdmin' ,subscription().subscriptionId))]",
        "deploymentScriptCertCreateUri": "[concat(parameters('Ev2ScriptUrl'),'KeyVault.CertCreation.ps1',parameters('Ev2TemplateSAS'))]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[variables('identityName')]",
            "location": "[variables('location')]"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-11-01-preview",
            "name": "[variables('vaults_salesproductivity_name')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[parameters('tenantId')]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "[parameters('kVDefaultAction')]",
                    "ipRules": [
                        {
                            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')),'2020-11-01').ipAddress]"
                        }
                    ],
                    "virtualNetworkRules": []
                },
                "accessPolicies": [
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[parameters('cdnobjectId')]",
                        "permissions": {
                            "keys": [],
                            "secrets": [ "Get" ],
                            "certificates": []
                        }
                    },
                    {
                        "tenantId": "[parameters('tenantId')]",
                        "objectId": "[parameters('appserviceobjectId')]",
                        "permissions": {
                            "keys": [],
                            "secrets": [ "Get" ],
                            "certificates": []
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "vaultUri": "[variables('kvUrl')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "createAddCertificate",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaults_salesproductivity_name'))]",
                "[resourceId('Microsoft.Authorization/roleAssignments', variables('deploymentuserIdentityAssignmentId'))]"
            ],
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
                }
            },
            "kind": "AzurePowerShell",
            "properties": {
                "forceUpdateTag": "[variables('deploymentScriptsUpdateTag')]",
                "azPowerShellVersion": "8.3",
                "timeout": "PT30M",
                "arguments": "[
                    concat('-kvName', ' ',concat('\\\"', variables('vaults_salesproductivity_name'), '\\\"'),
                    ' ', '-scaleUnit',' ',concat('\\\"', parameters('scaleUnit'), '\\\"'),
                    ' ', '-vivaSalesSSLCertName',' ',concat('\\\"', parameters('vivaSalesSSLCertName'), '\\\"'),
                    ' ', '-vivaSalesLicensingCertName',' ',concat('\\\"', parameters('vivaSalesLicensingCertName'), '\\\"'),
                    ' ', '-cert_Config',' ',concat('\\\"', parameters('Cert_Config'), '\\\"'),
                    ' ', '-botFpaConnectionCertName',' ',concat('\\\"', parameters('botFpaConnectionCertName'), '\\\"'))
                    ]",
                "primaryScriptUri": "[variables('deploymentScriptCertCreateUri')]",
                "cleanupPreference": "[parameters('DeploymentScriptsCleanupPreference')]",
                "retentionInterval": "P1D"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(uniqueString(parameters('deploymentSpn'), parameters('scaleUnit'), subscription().subscriptionId))]",
            "properties": {
                "roleDefinitionId": "[variables('kvRbacCryptoOfficerRoleID')]",
                "principalId": "[parameters('deploymentSpn')]"
            },
            "dependsOn": [ "[resourceId('Microsoft.KeyVault/vaults', variables('vaults_salesproductivity_name'))]" ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(uniqueString(parameters('appserviceobjectId'), parameters('scaleUnit'), subscription().subscriptionId))]",
            "properties": {
                "roleDefinitionId": "[variables('kvRbacSecretsUserRoleID')]",
                "principalId": "[parameters('appserviceobjectId')]"
            },
            "dependsOn": [ "[resourceId('Microsoft.KeyVault/vaults', variables('vaults_salesproductivity_name'))]" ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('deploymentuserIdentityAssignmentId')]",
            "properties": {
                "roleDefinitionId": "[variables('owner')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30').principalId]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaults_salesproductivity_name'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[variables('deploymentuserIdentityAssignmentId2')]",
            "properties": {
                "roleDefinitionId": "[variables('kvRbacAdminRoleID')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30').principalId]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('vaults_salesproductivity_name'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
            ]
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[guid(uniqueString(parameters('cdnobjectId'), parameters('scaleUnit'), subscription().subscriptionId))]",
            "properties": {
                "roleDefinitionId": "[variables('kvRbacSecretsUserRoleID')]",
                "principalId": "[parameters('cdnobjectId')]"
            },
            "dependsOn": [ "[resourceId('Microsoft.KeyVault/vaults', variables('vaults_salesproductivity_name'))]" ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/keys",
            "apiVersion": "2022-07-01",
            "name": "[format('{0}/{1}', variables('vaults_salesproductivity_name'), variables('kvDataProtectionEncryptionKeyName'))]",
            "properties": {
                "kty": "RSA",
                "keySize": "2048"
            },
            "dependsOn": [ "[resourceId('Microsoft.KeyVault/vaults', variables('vaults_salesproductivity_name'))]" ]
        }
    ]
}
